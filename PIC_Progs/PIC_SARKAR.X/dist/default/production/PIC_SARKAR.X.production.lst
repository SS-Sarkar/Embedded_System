

Microchip MPLAB XC8 Assembler V2.05 build -831301201 
                                                                                               Fri Aug 26 16:49:28 2022

Microchip MPLAB XC8 C Compiler v2.05 (Free license) build 20181220022703 Og9 
     1                           	processor	18F4520
     2                           	fnconf	rparam,??,?,0
     3                           	opt	pw 120
     4                           	opt	flic
     5                           	psect	idataCOMRAM,global,class=CODE,delta=1,noexec
     6                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     7                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
     8                           	psect	dataCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
     9                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
    10                           	psect	text0,global,reloc=2,class=CODE,delta=1
    11                           	psect	text1,global,reloc=2,class=CODE,delta=1
    12                           	psect	text2,global,reloc=2,class=CODE,delta=1
    13                           	psect	text3,global,reloc=2,class=CODE,delta=1
    14                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    15                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    16  0000                     
    17                           ; Version 2.05
    18                           ; Generated 20/12/2018 GMT
    19                           ; 
    20                           ; Copyright Â© 2018, Microchip Technology Inc. and its subsidiaries ("Microchip")
    21                           ; All rights reserved.
    22                           ; 
    23                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    24                           ; 
    25                           ; Redistribution and use in source and binary forms, with or without modification, are
    26                           ; permitted provided that the following conditions are met:
    27                           ; 
    28                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    29                           ;        conditions and the following disclaimer.
    30                           ; 
    31                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    32                           ;        of conditions and the following disclaimer in the documentation and/or other
    33                           ;        materials provided with the distribution.
    34                           ; 
    35                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    36                           ;        software without specific prior written permission.
    37                           ; 
    38                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    39                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    40                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    41                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    42                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    43                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    44                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    45                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    46                           ; 
    47                           ; 
    48                           ; Code-generator required, PIC18F4520 Definitions
    49                           ; 
    50                           ; SFR Addresses
    51  0000                     
    52                           	psect	idataCOMRAM
    53  007F3E                     __pidataCOMRAM:
    54                           	opt callstack 0
    55                           
    56                           ;initializer for _comd
    57  007F3E  0038               	dw	56
    58  007F40  000E               	dw	14
    59  007F42  0001               	dw	1
    60  007F44  0006               	dw	6
    61  007F46  0080               	dw	128
    62  0000                     _RCREG	set	4014
    63  0000                     _PORTB	set	3969
    64  0000                     _RCSTA	set	4011
    65  0000                     _SPBRG	set	4015
    66  0000                     _TRISB	set	3987
    67  0000                     _RCIF	set	31989
    68  0000                     _TRISC7	set	31911
    69  0000                     _TRISC2	set	31906
    70  0000                     _TRISC1	set	31905
    71  0000                     _TRISC0	set	31904
    72  0000                     _RC2	set	31762
    73  0000                     _RC1	set	31761
    74  0000                     _RC0	set	31760
    75                           
    76                           ; #config settings
    77  0000                     
    78                           	psect	cinit
    79  007F7E                     __pcinit:
    80                           	opt callstack 0
    81  007F7E                     start_initialization:
    82                           	opt callstack 0
    83  007F7E                     __initialization:
    84                           	opt callstack 0
    85                           
    86                           ; Initialize objects allocated to COMRAM (10 bytes)
    87                           ; load TBLPTR registers with __pidataCOMRAM
    88  007F7E  0E3E               	movlw	low __pidataCOMRAM
    89  007F80  6EF6               	movwf	tblptrl,c
    90  007F82  0E7F               	movlw	high __pidataCOMRAM
    91  007F84  6EF7               	movwf	tblptrh,c
    92  007F86  0E00               	movlw	low (__pidataCOMRAM shr (0+16))
    93  007F88  6EF8               	movwf	tblptru,c
    94  007F8A  EE00  F001         	lfsr	0,__pdataCOMRAM
    95  007F8E  EE10 F00A          	lfsr	1,10
    96  007F92                     copy_data0:
    97  007F92  0009               	tblrd		*+
    98  007F94  CFF5 FFEE          	movff	tablat,postinc0
    99  007F98  50E5               	movf	postdec1,w,c
   100  007F9A  50E1               	movf	fsr1l,w,c
   101  007F9C  E1FA               	bnz	copy_data0
   102                           
   103                           ; Clear objects allocated to COMRAM (6 bytes)
   104  007F9E  6A10               	clrf	(__pbssCOMRAM+5)& (0+255),c
   105  007FA0  6A0F               	clrf	(__pbssCOMRAM+4)& (0+255),c
   106  007FA2  6A0E               	clrf	(__pbssCOMRAM+3)& (0+255),c
   107  007FA4  6A0D               	clrf	(__pbssCOMRAM+2)& (0+255),c
   108  007FA6  6A0C               	clrf	(__pbssCOMRAM+1)& (0+255),c
   109  007FA8  6A0B               	clrf	__pbssCOMRAM& (0+255),c
   110  007FAA                     end_of_initialization:
   111                           	opt callstack 0
   112  007FAA                     __end_of__initialization:
   113                           	opt callstack 0
   114  007FAA  0100               	movlb	0
   115  007FAC  EFD8  F03F         	goto	_main	;jump to C main() function
   116                           
   117                           	psect	bssCOMRAM
   118  00000B                     __pbssCOMRAM:
   119                           	opt callstack 0
   120  00000B                     _c:
   121                           	opt callstack 0
   122  00000B                     	ds	2
   123  00000D                     _b:
   124                           	opt callstack 0
   125  00000D                     	ds	2
   126  00000F                     _a:
   127                           	opt callstack 0
   128  00000F                     	ds	2
   129                           
   130                           	psect	dataCOMRAM
   131  000001                     __pdataCOMRAM:
   132                           	opt callstack 0
   133  000001                     _comd:
   134                           	opt callstack 0
   135  000001                     	ds	10
   136                           
   137                           	psect	cstackCOMRAM
   138  000000                     __pcstackCOMRAM:
   139                           	opt callstack 0
   140  000000                     
   141                           ; 1 bytes @ 0x0
   142 ;;
   143 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   144 ;;
   145 ;; *************** function _main *****************
   146 ;; Defined at:
   147 ;;		line 92 in file "PIC_Keyboard_LCD.c"
   148 ;; Parameters:    Size  Location     Type
   149 ;;		None
   150 ;; Auto vars:     Size  Location     Type
   151 ;;		None
   152 ;; Return value:  Size  Location     Type
   153 ;;                  1    wreg      void 
   154 ;; Registers used:
   155 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
   156 ;; Tracked objects:
   157 ;;		On entry : 0/0
   158 ;;		On exit  : 0/0
   159 ;;		Unchanged: 0/0
   160 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   161 ;;      Params:         0       0       0       0       0       0       0
   162 ;;      Locals:         0       0       0       0       0       0       0
   163 ;;      Temps:          0       0       0       0       0       0       0
   164 ;;      Totals:         0       0       0       0       0       0       0
   165 ;;Total ram usage:        0 bytes
   166 ;; Hardware stack levels required when called:    2
   167 ;; This function calls:
   168 ;;		_com
   169 ;;		_data
   170 ;; This function is called by:
   171 ;;		Startup code after reset
   172 ;; This function uses a non-reentrant model
   173 ;;
   174                           
   175                           	psect	text0
   176  007FB0                     __ptext0:
   177                           	opt callstack 0
   178  007FB0                     _main:
   179                           	opt callstack 29
   180                           
   181                           ;PIC_Keyboard_LCD.c: 94: TRISC0 = 0;
   182                           
   183                           ;incstack = 0
   184  007FB0  9094               	bcf	3988,0,c	;volatile
   185                           
   186                           ;PIC_Keyboard_LCD.c: 95: TRISC1 = 0;
   187  007FB2  9294               	bcf	3988,1,c	;volatile
   188                           
   189                           ;PIC_Keyboard_LCD.c: 96: TRISC2 = 0;
   190  007FB4  9494               	bcf	3988,2,c	;volatile
   191                           
   192                           ;PIC_Keyboard_LCD.c: 97: TRISC7 = 1;
   193  007FB6  8E94               	bsf	3988,7,c	;volatile
   194                           
   195                           ;PIC_Keyboard_LCD.c: 98: TRISB = 0;
   196  007FB8  0E00               	movlw	0
   197  007FBA  6E93               	movwf	3987,c	;volatile
   198                           
   199                           ;PIC_Keyboard_LCD.c: 99: SPBRG = 31;
   200  007FBC  0E1F               	movlw	31
   201  007FBE  6EAF               	movwf	4015,c	;volatile
   202                           
   203                           ;PIC_Keyboard_LCD.c: 100: RCSTA = 0x90;
   204  007FC0  0E90               	movlw	144
   205  007FC2  6EAB               	movwf	4011,c	;volatile
   206                           
   207                           ;PIC_Keyboard_LCD.c: 101: for(b=0;b<5;b++)
   208  007FC4  0E00               	movlw	0
   209  007FC6  6E0E               	movwf	_b+1,c
   210  007FC8  0E00               	movlw	0
   211  007FCA  6E0D               	movwf	_b,c
   212  007FCC                     l878:
   213                           
   214                           ;PIC_Keyboard_LCD.c: 102: {;PIC_Keyboard_LCD.c: 103: PORTB = comd[b];
   215  007FCC  500D               	movf	_b,w,c
   216  007FCE  0D02               	mullw	2
   217  007FD0  50F3               	movf	prodl,w,c
   218  007FD2  0F01               	addlw	low _comd
   219  007FD4  6ED9               	movwf	fsr2l,c
   220  007FD6  6ADA               	clrf	fsr2h,c
   221  007FD8  50DF               	movf	indf2,w,c
   222  007FDA  6E81               	movwf	3969,c	;volatile
   223                           
   224                           ;PIC_Keyboard_LCD.c: 104: com();
   225  007FDC  ECA4  F03F         	call	_com	;wreg free
   226  007FE0  4A0D               	infsnz	_b,f,c
   227  007FE2  2A0E               	incf	_b+1,f,c
   228  007FE4  500E               	movf	_b+1,w,c
   229  007FE6  E104               	bnz	u50
   230  007FE8  0E05               	movlw	5
   231  007FEA  5C0D               	subwf	_b,w,c
   232  007FEC  A0D8               	btfss	status,0,c
   233  007FEE  D7EE               	goto	l878
   234  007FF0                     u50:
   235  007FF0  AA9E               	btfss	3998,5,c	;volatile
   236  007FF2  D7FE               	goto	u50
   237                           
   238                           ;PIC_Keyboard_LCD.c: 109: PORTB = RCREG;
   239  007FF4  CFAE FF81          	movff	4014,3969	;volatile
   240                           
   241                           ;PIC_Keyboard_LCD.c: 110: data();
   242  007FF8  ECAB  F03F         	call	_data	;wreg free
   243                           
   244                           ;PIC_Keyboard_LCD.c: 111: RCIF = 0;
   245  007FFC  9A9E               	bcf	3998,5,c	;volatile
   246  007FFE  D7F8               	goto	u50
   247  008000                     __end_of_main:
   248                           	opt callstack 0
   249                           
   250 ;; *************** function _data *****************
   251 ;; Defined at:
   252 ;;		line 84 in file "PIC_Keyboard_LCD.c"
   253 ;; Parameters:    Size  Location     Type
   254 ;;		None
   255 ;; Auto vars:     Size  Location     Type
   256 ;;		None
   257 ;; Return value:  Size  Location     Type
   258 ;;                  1    wreg      void 
   259 ;; Registers used:
   260 ;;		wreg, status,2, status,0, cstack
   261 ;; Tracked objects:
   262 ;;		On entry : 0/0
   263 ;;		On exit  : 0/0
   264 ;;		Unchanged: 0/0
   265 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   266 ;;      Params:         0       0       0       0       0       0       0
   267 ;;      Locals:         0       0       0       0       0       0       0
   268 ;;      Temps:          0       0       0       0       0       0       0
   269 ;;      Totals:         0       0       0       0       0       0       0
   270 ;;Total ram usage:        0 bytes
   271 ;; Hardware stack levels used:    1
   272 ;; Hardware stack levels required when called:    1
   273 ;; This function calls:
   274 ;;		_delay
   275 ;; This function is called by:
   276 ;;		_main
   277 ;; This function uses a non-reentrant model
   278 ;;
   279                           
   280                           	psect	text1
   281  007F56                     __ptext1:
   282                           	opt callstack 0
   283  007F56                     _data:
   284                           	opt callstack 29
   285                           
   286                           ;PIC_Keyboard_LCD.c: 86: RC0 = 1;
   287                           
   288                           ;incstack = 0
   289  007F56  8082               	bsf	3970,0,c	;volatile
   290                           
   291                           ;PIC_Keyboard_LCD.c: 87: RC1 = 0;
   292  007F58  9282               	bcf	3970,1,c	;volatile
   293                           
   294                           ;PIC_Keyboard_LCD.c: 88: RC2 = 1;
   295  007F5A  8482               	bsf	3970,2,c	;volatile
   296                           
   297                           ;PIC_Keyboard_LCD.c: 89: delay();
   298  007F5C  ECB2  F03F         	call	_delay	;wreg free
   299                           
   300                           ;PIC_Keyboard_LCD.c: 90: RC2 = 0;
   301  007F60  9482               	bcf	3970,2,c	;volatile
   302  007F62  0012               	return		;funcret
   303  007F64                     __end_of_data:
   304                           	opt callstack 0
   305                           
   306 ;; *************** function _com *****************
   307 ;; Defined at:
   308 ;;		line 76 in file "PIC_Keyboard_LCD.c"
   309 ;; Parameters:    Size  Location     Type
   310 ;;		None
   311 ;; Auto vars:     Size  Location     Type
   312 ;;		None
   313 ;; Return value:  Size  Location     Type
   314 ;;                  1    wreg      void 
   315 ;; Registers used:
   316 ;;		wreg, status,2, status,0, cstack
   317 ;; Tracked objects:
   318 ;;		On entry : 0/0
   319 ;;		On exit  : 0/0
   320 ;;		Unchanged: 0/0
   321 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   322 ;;      Params:         0       0       0       0       0       0       0
   323 ;;      Locals:         0       0       0       0       0       0       0
   324 ;;      Temps:          0       0       0       0       0       0       0
   325 ;;      Totals:         0       0       0       0       0       0       0
   326 ;;Total ram usage:        0 bytes
   327 ;; Hardware stack levels used:    1
   328 ;; Hardware stack levels required when called:    1
   329 ;; This function calls:
   330 ;;		_delay
   331 ;; This function is called by:
   332 ;;		_main
   333 ;; This function uses a non-reentrant model
   334 ;;
   335                           
   336                           	psect	text2
   337  007F48                     __ptext2:
   338                           	opt callstack 0
   339  007F48                     _com:
   340                           	opt callstack 29
   341                           
   342                           ;PIC_Keyboard_LCD.c: 78: RC0 = 0;
   343                           
   344                           ;incstack = 0
   345  007F48  9082               	bcf	3970,0,c	;volatile
   346                           
   347                           ;PIC_Keyboard_LCD.c: 79: RC1 = 0;
   348  007F4A  9282               	bcf	3970,1,c	;volatile
   349                           
   350                           ;PIC_Keyboard_LCD.c: 80: RC2 = 1;
   351  007F4C  8482               	bsf	3970,2,c	;volatile
   352                           
   353                           ;PIC_Keyboard_LCD.c: 81: delay();
   354  007F4E  ECB2  F03F         	call	_delay	;wreg free
   355                           
   356                           ;PIC_Keyboard_LCD.c: 82: RC2 = 0;
   357  007F52  9482               	bcf	3970,2,c	;volatile
   358  007F54  0012               	return		;funcret
   359  007F56                     __end_of_com:
   360                           	opt callstack 0
   361                           
   362 ;; *************** function _delay *****************
   363 ;; Defined at:
   364 ;;		line 72 in file "PIC_Keyboard_LCD.c"
   365 ;; Parameters:    Size  Location     Type
   366 ;;		None
   367 ;; Auto vars:     Size  Location     Type
   368 ;;		None
   369 ;; Return value:  Size  Location     Type
   370 ;;                  1    wreg      void 
   371 ;; Registers used:
   372 ;;		wreg, status,2, status,0
   373 ;; Tracked objects:
   374 ;;		On entry : 0/0
   375 ;;		On exit  : 0/0
   376 ;;		Unchanged: 0/0
   377 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   378 ;;      Params:         0       0       0       0       0       0       0
   379 ;;      Locals:         0       0       0       0       0       0       0
   380 ;;      Temps:          0       0       0       0       0       0       0
   381 ;;      Totals:         0       0       0       0       0       0       0
   382 ;;Total ram usage:        0 bytes
   383 ;; Hardware stack levels used:    1
   384 ;; This function calls:
   385 ;;		Nothing
   386 ;; This function is called by:
   387 ;;		_com
   388 ;;		_data
   389 ;; This function uses a non-reentrant model
   390 ;;
   391                           
   392                           	psect	text3
   393  007F64                     __ptext3:
   394                           	opt callstack 0
   395  007F64                     _delay:
   396                           	opt callstack 29
   397                           
   398                           ;PIC_Keyboard_LCD.c: 74: for(a=0;a<35000;a++);
   399                           
   400                           ;incstack = 0
   401  007F64  0E00               	movlw	0
   402  007F66  6E10               	movwf	_a+1,c
   403  007F68  0E00               	movlw	0
   404  007F6A  6E0F               	movwf	_a,c
   405  007F6C                     l854:
   406  007F6C  4A0F               	infsnz	_a,f,c
   407  007F6E  2A10               	incf	_a+1,f,c
   408  007F70  0EB8               	movlw	184
   409  007F72  5C0F               	subwf	_a,w,c
   410  007F74  0E88               	movlw	136
   411  007F76  5810               	subwfb	_a+1,w,c
   412  007F78  B0D8               	btfsc	status,0,c
   413  007F7A  0012               	return	
   414  007F7C  D7F7               	goto	l854
   415  007F7E                     __end_of_delay:
   416                           	opt callstack 0
   417  0000                     
   418                           	psect	rparam
   419  0000                     tosu	equ	0xFFF
   420                           tosh	equ	0xFFE
   421                           tosl	equ	0xFFD
   422                           stkptr	equ	0xFFC
   423                           pclatu	equ	0xFFB
   424                           pclath	equ	0xFFA
   425                           pcl	equ	0xFF9
   426                           tblptru	equ	0xFF8
   427                           tblptrh	equ	0xFF7
   428                           tblptrl	equ	0xFF6
   429                           tablat	equ	0xFF5
   430                           prodh	equ	0xFF4
   431                           prodl	equ	0xFF3
   432                           indf0	equ	0xFEF
   433                           postinc0	equ	0xFEE
   434                           postdec0	equ	0xFED
   435                           preinc0	equ	0xFEC
   436                           plusw0	equ	0xFEB
   437                           fsr0h	equ	0xFEA
   438                           fsr0l	equ	0xFE9
   439                           wreg	equ	0xFE8
   440                           indf1	equ	0xFE7
   441                           postinc1	equ	0xFE6
   442                           postdec1	equ	0xFE5
   443                           preinc1	equ	0xFE4
   444                           plusw1	equ	0xFE3
   445                           fsr1h	equ	0xFE2
   446                           fsr1l	equ	0xFE1
   447                           bsr	equ	0xFE0
   448                           indf2	equ	0xFDF
   449                           postinc2	equ	0xFDE
   450                           postdec2	equ	0xFDD
   451                           preinc2	equ	0xFDC
   452                           plusw2	equ	0xFDB
   453                           fsr2h	equ	0xFDA
   454                           fsr2l	equ	0xFD9
   455                           status	equ	0xFD8


Data Sizes:
    Strings     0
    Constant    0
    Data        10
    BSS         6
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM          127      0      16
    BANK0           128      0       0
    BANK1           256      0       0
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMRAM

    None.

Critical Paths under _main in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0       0
                                _com
                               _data
 ---------------------------------------------------------------------------------
 (1) _data                                                 0     0      0       0
                              _delay
 ---------------------------------------------------------------------------------
 (1) _com                                                  0     0      0       0
                              _delay
 ---------------------------------------------------------------------------------
 (2) _delay                                                0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 2
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _com
     _delay
   _data
     _delay

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             5FF      0       0      17        0.0%
EEDATA             100      0       0       0        0.0%
BITBANK5           100      0       0      16        0.0%
BANK5              100      0       0      14        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0       0       7        0.0%
BITBANK0            80      0       0       4        0.0%
BANK0               80      0       0       5        0.0%
BITCOMRAM           7F      0       0       0        0.0%
COMRAM              7F      0      10       1       12.6%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0      10      15        0.0%
DATA                 0      0      10       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.05 build -831301201 
Symbol Table                                                                                   Fri Aug 26 16:49:28 2022

                      _a 000F                        _b 000D                        _c 000B  
                     u50 7FF0             __CFG_CP0$OFF 000000             __CFG_CP1$OFF 000000  
           __CFG_CP2$OFF 000000             __CFG_CP3$OFF 000000              __CFG_OSC$HS 000000  
                    l854 7F6C                      l878 7FCC             __CFG_CPB$OFF 000000  
                    _RC0 007C10                      _RC1 007C11                      _RC2 007C12  
           __CFG_CPD$OFF 000000                      _com 7F48             __CFG_LVP$OFF 000000  
           __CFG_WDT$OFF 000000                     ?_com 0000                     _RCIF 007CF5  
                   _data 7F56                     _comd 0001                     _main 7FB0  
                   fsr2h 000FDA                     indf2 000FDF                     fsr1l 000FE1  
                   fsr2l 000FD9                     prodl 000FF3                     start 0000  
          __CFG_IESO$OFF 000000             ___param_bank 000000                    ??_com 0000  
                  ?_data 0000                    ?_main 0000                    _RCREG 000FAE  
                  _RCSTA 000FAB                    _SPBRG 000FAF                    _PORTB 000F81  
                  _TRISB 000F93            __CFG_PWRT$OFF 000000            __CFG_WRT0$OFF 000000  
          __CFG_WRT1$OFF 000000            __CFG_WRT2$OFF 000000            __CFG_WRT3$OFF 000000  
         __CFG_EBTR0$OFF 000000           __CFG_FCMEN$OFF 000000           __CFG_EBTR1$OFF 000000  
         __CFG_EBTR2$OFF 000000           __CFG_EBTR3$OFF 000000            __CFG_WRTB$OFF 000000  
          __CFG_WRTC$OFF 000000            __CFG_WRTD$OFF 000000           __CFG_EBTRB$OFF 000000  
                  _delay 7F64                    tablat 000FF5                    status 000FD8  
         __CFG_MCLRE$OFF 000000          __initialization 7F7E             __end_of_data 7F64  
           __end_of_main 8000                   ??_data 0000                   ??_main 0000  
          __activetblptr 000000                   ?_delay 0000                   _TRISC0 007CA0  
                 _TRISC1 007CA1                   _TRISC2 007CA2                   _TRISC7 007CA7  
         __CFG_XINST$OFF 000000             __pdataCOMRAM 0001                   tblptrh 000FF7  
                 tblptrl 000FF6                   tblptru 000FF8               __accesstop 0080  
__end_of__initialization 7FAA          __CFG_PBADEN$OFF 000000            ___rparam_used 000001  
         __pcstackCOMRAM 0000            __end_of_delay 7F7E                  ??_delay 0000  
                __Hparam 0000                  __Lparam 0000          __CFG_STVREN$OFF 000000  
                __pcinit 7F7E                  __ramtop 0600                  __ptext0 7FB0  
                __ptext1 7F56                  __ptext2 7F48                  __ptext3 7F64  
           __size_of_com 000E     end_of_initialization 7FAA                  postdec1 000FE5  
                postinc0 000FEE            __pidataCOMRAM 7F3E      start_initialization 7F7E  
            __end_of_com 7F56         __CFG_LPT1OSC$OFF 000000              __pbssCOMRAM 000B  
      __CFG_CCP2MX$PORTC 000000           __size_of_delay 001A                copy_data0 7F92  
               __Hrparam 0000                 __Lrparam 0000            __size_of_data 000E  
          __size_of_main 0050  
